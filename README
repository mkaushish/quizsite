VIEW STRUCTURE FOR PROBLEMS:
  The goal of this swection is to explain how we convert a QuestionBase into HTML.

What we start with:
  QuestionBase
    | +- .text (array of HTMLObj's)
    +--- .soln (hash of solnname) -> solnval

The Process:
  Basically we want to display every HTMLObj in text.  To do this, we have a series of nested partials
    problem/_problem.html.erb = iterates through text, choosing the appropriate subpartials
    | +--> _multihtmlobj.html.erb = Displays MultiHTMLObjs  ]\ 
    +----> _htmlobj.html.erb  = displays single htmlobjs    ]/> these are either in problem, or problemanswer, depending on
              | |                                               whether you just want the problem, or also the answer
              | |
              | +-> problem/_inputfield.html.erb = displays individual input fields in either mutli or singular htmlobj's
              +---> problemanswer/_responsefield.html.erb = TODO what again?

NOTES:
-------------------
PUSHING TO HEROKU
  * remember to precompile assets in master (see below)
  * hope for the best...?

PRECOMPILING ASSETS
  * add any new assets to config.assets.precompile in config/environments/production
  * RAILS_ENV=production be rake assets:precompile
  * assets are compiled to /public/assets, so make sure you git add and commit that
  * ensure that shit changes when pushed to heruok (try pushing both production and master branches?)
  * MIGRATE THE DATABASE if you have added any new migrateions: heroku rake db:migrate

UPDATING QG ON RAILS
  * add any necessary new folders to config.autoload_paths in config/application.rb
  * update all_chapters in app/controllers/application.rb

a useful setting!
Look for the file /usr/lib/ruby/1.9.1/webrick/config.rb and edit it.

Replace the line

:DoNotReverseLookup => nil,
with

:DoNotReverseLookup => true,
Restart webrick and it'll work like a charm :)

Note, much of the code in this was taken from Micheal Hartls excellent Ruby on Rails Tutorial

GIT NOTES:
----------
revert a single file:
  $ git checkout <filename>  # checks out from HEAD
  $ git checkout -- <filename>  # necessary if filename is the same as a branch!

revert working directory
  $ git reset --hard  # CAREFUL this completely overwrites all diffs b/n the working copy and HEAD

A NICE GIT REFERENCE:
  http://git-scm.com/book

RAILS CONSOLE NOTES
-------------------
get access to helper methods (eg link_to)
  - according to docs, link_to is in ActionView::Helpers::UrlHelper
  - just "include ActionView::Helpers::UrlHelper" and link_to will be available in the global namespace

Instructions for setting up posgresql on ubuntu:
------------------------------------------------
$ sudo apt-get install postgresql
$ sudo su postgres # ubuntu package creates user postgres by default
$ createuser -d <username> # where user name is your user name
$ # answer yes at superuser prompt
$ bundle install # Gemfile should include a line saying "gem 'pg'"
$ rake db:create:all

#problem_overlay {
	z-index:20;
	position: fixed;
	left:50%;
	margin-left:-400px;
	height:100%;
	width:720px;
	padding:10px 40px;
	background-color:white;
	border-left:1px solid gray;
	border-right:1px solid gray;
}

.pset_title {
	position: absolute;
	width: 100%;
	text-align: center;
}

.problem_view_stats {
	position: relative;
	height:70px;
}

.button-blue {
	display:inline-block;
	background-color:$button_blue;
	color:white;
	font-size:13px;
	line-height:16px;
	padding:5px;
	font-weight:bold;
	border-radius:0;
	&:hover {
		color:white;
	}
}

.problem_body {
	h2 {
		display:inline-block;
	}

	input[type="text"] {
		border-radius:0;
		border:1px solid gray;
	}
}

@mixin has_check($d_y:0) {
	position:relative;
   	&:before {
   		content: url('correct_check.jpg');
   		position:absolute;
   		left:-25px;
   		top:$d_y;
   	}
}

// d_y is vertical compensation
@mixin has_x($d_y:0) {
	position:relative;
   	&:before {
   		content: url('incorrect_x.jpg');
   		position:absolute;
   		left:-25px;
   		top:$d_y;
   	}
}
.correct {
	>.inline-block, >.fraction, >.textfield {
		@include has_check();
	}
}
.incorrect {
	&>.input-field, &>.inline-block, &>.fraction {
		@include has_x();
	}
}

h2 {
	&.correct { @include has_check(); }
	&.incorrect { @include has_x(); }
}
input[type="radio"] {
	&.correct { @include has_check(-10px); }
	&.incorrect { @include has_x(-10px); }
}